@page "/hotelamenity/create"
@page "/hotelamenity/edit/{Id:int}"
@inject IHotelAmenityRepository HotelAmenityRepository
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject IFileUpload FileUpload
@*@attribute [Authorize]*@
@attribute [Authorize(Roles = SD.Role_Admin)]

<div class="row mt-2 mb-5">
    <h3 class="card-title text-info mb-3 ml-3">@Title Hotel Amenity</h3>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <EditForm Model="HotelAmenityModel" OnValidSubmit="HandleHotelAmenityUpsert">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="form-group">
                        <label>Name</label>
                        <InputText @bind-Value="HotelAmenityModel.Name" class="form-control"></InputText>
                        <ValidationMessage For="()=>HotelAmenityModel.Name"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <InputText @bind-Value="HotelAmenityModel.Description" class="form-control"></InputText>
                        <ValidationMessage For="()=>HotelAmenityModel.Description"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Timming</label>
                        <InputText @bind-Value="HotelAmenityModel.Timming" class="form-control"></InputText>
                        <ValidationMessage For="()=>HotelAmenityModel.Timming"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Icon Style</label>
                        <InputText @bind-Value="HotelAmenityModel.Icon" class="form-control"></InputText>
                        <ValidationMessage For="()=>HotelAmenityModel.Icon"></ValidationMessage>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-primary">@Title Room</button>
                        <NavLink href="hotelamenity" class="btn btn-secondary">Back to Index</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>



@code {
    [Parameter]
    public int? Id { get; set; }

    private HotelAmenityDTO HotelAmenityModel { get; set; } = new HotelAmenityDTO();
    private string Title { get; set; } = "Create";


    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            //Updating
            Title = "Update";
            HotelAmenityModel = await HotelAmenityRepository.GetHotelAmenity(Id.Value);


        }
        else
        {
            //Create
            HotelAmenityModel = new HotelAmenityDTO();
        }
    }


    private async Task HandleHotelAmenityUpsert()
    {

        try
        {

            if (HotelAmenityModel.Id != 0 && Title == "Update")
            {

                //Update
                var updateAmenityResult = await HotelAmenityRepository.UpdateHotelAmenity(HotelAmenityModel.Id, HotelAmenityModel);

                await JsRuntime.ToastrSuccess("Hotel room updated successfully.");
            }
            else
            {
                //Create
                var createdResult = await HotelAmenityRepository.CreateHotelAmenity(HotelAmenityModel);
                await JsRuntime.ToastrSuccess("Hotel room created successfully.");
            }
        }
        catch (Exception ex)
        {
            //log exceptions
            throw;
        }



        NavigationManager.NavigateTo("hotelamenity");
    }

}
